swagger: "2.0"
basePath: /api
schemes: 
  - http
  - https
produces: 
  - "application/json"
info: 
  version: "3.0.0-alpha1"
  title: "Boodskap API"
  description: "Boodskap IoT Platform API"
  termsOfService: "https://boodskap.io/terms-conditions"
  contact: 
    name: "Boodskap Team"
  license: 
    name: "MIT"
paths:
  '/brules/upsert':
    post:
      tags:
        - Upsert Binaray Rule
      summary: Create / Update Binaray Rule
      operationId: upsertBinarayRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: query
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: BinaryRule JSON object
          required: true
          schema:
            $ref: '#/definitions/BinaryRule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/get/{type}':
    get:
      tags:
        - Get Binary Rule
      summary: Retreive Binary Rule
      operationId: getBinaryRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: type
          in: path
          description: Binary rule identifier type
          required: true
          type: string
        - name: atoken
          in: query
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: query
          description: Domain Key, optional
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/BinaryRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/delete/{type}':
    delete:
      tags:
        - Delete Binary Rule
      summary: Delete Binary Rule
      operationId: deleteBinaryRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: type
          in: path
          description: Binary rule identifier type
          required: true
          type: string
        - name: atoken
          in: query
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: query
          description: Domain Key, optional
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/delete/all':
    delete:
      tags:
        - Delete All Binary Rules
      summary: Delete All Binary Rules
      operationId: deleteAllBinaryRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: query
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: query
          description: Domain Key, optional
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/count/all':
    get:
      tags:
        - Count All Binary Rules
      summary: Count All Binary Rules
      operationId: countAllBinaryRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: query
          description: Auth token of the logged in admin user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/count':
    get:
      tags:
        - Count Binary Rules
      summary: Count Binary Rules
      operationId: countBinaryRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: query
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: query
          description: Domain Key, optional
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/list':
    get:
      tags:
        - List Binary Rules
      summary: List Binary Rules
      operationId: listBinaryRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: query
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: query
          description: Domain Key, optional
          required: false
          type: string
        - name: load
          in: query
          description: load the source code, by default yes
          required: false
          type: boolean
        - name: page
          in: query
          description: Page index, starts from 0
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: Maximum number of rules to be listed
          required: false
          type: integer
          format: int32
        - name: next
          in: query
          description: If next is true, **type** is required
          required: false
          type: boolean
        - name: type
          in: query
          description: >-
            type value of the previous list operation, **required** if **next** is specified
          required: false
          type: string      
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BinaryRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/search':
    post:
      tags:
        - Search Binary Rules
      summary: Search Binary Rules
      operationId: searchBinaryRules
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: query
          description: Auth token of the logged in user
          required: true
          type: string
        - name: load
          in: query
          description: load the source code, by default yes
          required: false
          type: boolean
        - name: pageSize
          in: query
          description: Maximum number of objects to be listed
          required: false
          type: integer
          format: int32
        - name: dkey
          in: query
          description: Domain Key, optional
          required: false
          type: string
        - name: query
          in: body
          description: Search string
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BinaryRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/invoke/{type}/{messageId}':
    get:
      tags:
        - Invoke a Binary Rule
      summary: Invoke a Binary Rule
      operationId: invokeBinaryRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: type
          in: path
          description: Binary rule identifier type
          required: true
          type: string
        - name: messageId
          in: path
          description: Raw message identifier
          required: true
          type: string
        - name: atoken
          in: query
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: query
          description: Domain Key, optional
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
definitions:
  ApiError: 
    type: "object"
    required: 
      - "code"
    properties: 
      code: 
        type: "string"
      message: 
        type: "string"
  BinaryRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'type'
       - 'language'
       - 'code'
      properties:
        type:
          type: string
        description:
          type: string
  Count:
    type: object
    required:
      - total
    properties:
      total:
        type: integer
        format: int64
  Rule:
    type: object
    discriminator: ruleType
    required:
    - language
    - code
    properties:
      domainKey:
        type: string
      language:
        type: string
        enum:
          - GROOVY
          - JAVA_SCRIPT
          - NODE_JS
      code:
        type: string
      compilable:
        type: boolean
      description:
        type: string
      contexts:
        type: array
        items:
          type: string
      plugins:
        type: array
        items:
          type: string
      createdStamp:
        type: integer
        format: int64
      updatedStamp:
        type: integer
        format: int64
        
  Success: 
    type: "object"
    required:
      - code
    properties: 
      code: 
        type: "string"
      message: 
        type: "string"
